-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from CMM/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pDef -> Def                                 (1)
	%start_pListStm -> ListStm                         (2)
	%start_pListDef -> ListDef                         (3)
	%start_pListArg -> ListArg                         (4)
	%start_pListId -> ListId                           (5)
	%start_pListExp -> ListExp                         (6)
	%start_pType -> Type                               (7)
	%start_pArg -> Arg                                 (8)
	%start_pStm -> Stm                                 (9)
	%start_pExp6 -> Exp6                               (10)
	%start_pExp5 -> Exp5                               (11)
	%start_pExp4 -> Exp4                               (12)
	%start_pExp3 -> Exp3                               (13)
	%start_pExp2 -> Exp2                               (14)
	%start_pExp1 -> Exp1                               (15)
	%start_pExp -> Exp                                 (16)
	Integer -> L_integ                                 (17)
	Double -> L_doubl                                  (18)
	Id -> L_Id                                         (19)
	Program -> ListDef                                 (20)
	Def -> Type Id '(' ListArg ')' '{' ListStm '}'     (21)
	ListStm ->                                         (22)
	ListStm -> ListStm Stm                             (23)
	ListDef -> Def                                     (24)
	ListDef -> Def ListDef                             (25)
	ListArg ->                                         (26)
	ListArg -> Arg                                     (27)
	ListArg -> Arg ',' ListArg                         (28)
	ListId -> Id                                       (29)
	ListId -> Id ',' ListId                            (30)
	ListExp ->                                         (31)
	ListExp -> Exp                                     (32)
	ListExp -> Exp ',' ListExp                         (33)
	Type -> 'bool'                                     (34)
	Type -> 'double'                                   (35)
	Type -> 'int'                                      (36)
	Type -> 'void'                                     (37)
	Arg -> Type Id                                     (38)
	Stm -> Exp ';'                                     (39)
	Stm -> Type ListId ';'                             (40)
	Stm -> Type Id '=' Exp ';'                         (41)
	Stm -> 'return' Exp ';'                            (42)
	Stm -> 'while' '(' Exp ')' Stm                     (43)
	Stm -> '{' ListStm '}'                             (44)
	Stm -> 'if' '(' Exp ')' Stm 'else' Stm             (45)
	Exp6 -> Integer                                    (46)
	Exp6 -> Double                                     (47)
	Exp6 -> 'true'                                     (48)
	Exp6 -> 'false'                                    (49)
	Exp6 -> Id                                         (50)
	Exp6 -> Id '(' ListExp ')'                         (51)
	Exp6 -> Id '++'                                    (52)
	Exp6 -> Id '--'                                    (53)
	Exp6 -> '++' Id                                    (54)
	Exp6 -> '--' Id                                    (55)
	Exp6 -> '(' Exp ')'                                (56)
	Exp5 -> Exp5 '*' Exp6                              (57)
	Exp5 -> Exp5 '/' Exp6                              (58)
	Exp5 -> Exp6                                       (59)
	Exp4 -> Exp4 '+' Exp5                              (60)
	Exp4 -> Exp4 '-' Exp5                              (61)
	Exp4 -> Exp5                                       (62)
	Exp3 -> Exp4 '<' Exp4                              (63)
	Exp3 -> Exp4 '>' Exp4                              (64)
	Exp3 -> Exp4 '<=' Exp4                             (65)
	Exp3 -> Exp4 '>=' Exp4                             (66)
	Exp3 -> Exp4 '==' Exp4                             (67)
	Exp3 -> Exp4 '!=' Exp4                             (68)
	Exp3 -> Exp4                                       (69)
	Exp2 -> Exp2 '&&' Exp3                             (70)
	Exp2 -> Exp3                                       (71)
	Exp1 -> Exp1 '||' Exp2                             (72)
	Exp1 -> Exp2                                       (73)
	Exp -> Id '=' Exp                                  (74)
	Exp -> Exp1                                        (75)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'&&'           { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	'++'           { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'--'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'bool'         { PT _ (TS _ 19) }
	'double'       { PT _ (TS _ 20) }
	'else'         { PT _ (TS _ 21) }
	'false'        { PT _ (TS _ 22) }
	'if'           { PT _ (TS _ 23) }
	'int'          { PT _ (TS _ 24) }
	'return'       { PT _ (TS _ 25) }
	'true'         { PT _ (TS _ 26) }
	'void'         { PT _ (TS _ 27) }
	'while'        { PT _ (TS _ 28) }
	'{'            { PT _ (TS _ 29) }
	'||'           { PT _ (TS _ 30) }
	'}'            { PT _ (TS _ 31) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_Id           { PT _ (T_Id $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pDef     rule  1
	%start_pListStm rule  2
	%start_pListDef rule  3
	%start_pListArg rule  4
	%start_pListId  rule  5
	%start_pListExp rule  6
	%start_pType    rule  7
	%start_pArg     rule  8
	%start_pStm     rule  9
	%start_pExp6    rule  10
	%start_pExp5    rule  11
	%start_pExp4    rule  12
	%start_pExp3    rule  13
	%start_pExp2    rule  14
	%start_pExp1    rule  15
	%start_pExp     rule  16
	Integer         rule  17
	Double          rule  18
	Id              rule  19
	Program         rule  20
	Def             rule  21
	ListStm         rules 22, 23
	ListDef         rules 24, 25
	ListArg         rules 26, 27, 28
	ListId          rules 29, 30
	ListExp         rules 31, 32, 33
	Type            rules 34, 35, 36, 37
	Arg             rule  38
	Stm             rules 39, 40, 41, 42, 43, 44, 45
	Exp6            rules 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
	Exp5            rules 57, 58, 59
	Exp4            rules 60, 61, 62
	Exp3            rules 63, 64, 65, 66, 67, 68, 69
	Exp2            rules 70, 71
	Exp1            rules 72, 73
	Exp             rules 74, 75

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	Program        goto state 68
	Def            goto state 63
	ListDef        goto state 69
	Type           goto state 65

State 1


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	Def            goto state 67
	Type           goto state 65

State 2


	'('            reduce using rule 22
	'++'           reduce using rule 22
	'--'           reduce using rule 22
	'bool'         reduce using rule 22
	'double'       reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_Id           reduce using rule 22
	%eof           reduce using rule 22

	ListStm        goto state 66

State 3


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	Def            goto state 63
	ListDef        goto state 64
	Type           goto state 65

State 4


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51
	%eof           reduce using rule 26

	ListArg        goto state 61
	Type           goto state 54
	Arg            goto state 62

State 5


	L_Id           shift, and enter state 35

	Id             goto state 59
	ListId         goto state 60

State 6


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35
	%eof           reduce using rule 31

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	ListExp        goto state 57
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 58

State 7


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	Type           goto state 56

State 8


	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	Type           goto state 54
	Arg            goto state 55

State 9


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 44
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 10


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 42

State 11


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 41

State 12


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 40

State 13


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 39

State 14


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 38

State 15


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 37

State 16


	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 28

State 17


	L_integ        shift, and enter state 18


State 18

	Integer -> L_integ .                                (rule 17)

	'!='           reduce using rule 17
	'&&'           reduce using rule 17
	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	'/'            reduce using rule 17
	';'            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'=='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'||'           reduce using rule 17
	%eof           reduce using rule 17


State 19

	Exp6 -> Integer .                                   (rule 46)

	'!='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46
	%eof           reduce using rule 46


State 20

	Exp6 -> Double .                                    (rule 47)

	'!='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47
	%eof           reduce using rule 47


State 21

	Exp6 -> Id .                                        (rule 50)
	Exp6 -> Id . '(' ListExp ')'                        (rule 51)
	Exp6 -> Id . '++'                                   (rule 52)
	Exp6 -> Id . '--'                                   (rule 53)
	Exp -> Id . '=' Exp                                 (rule 74)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 90
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           shift, and enter state 91
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           shift, and enter state 92
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            shift, and enter state 102
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	%eof           reduce using rule 50


State 22

	Exp5 -> Exp6 .                                      (rule 59)

	'!='           reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59
	%eof           reduce using rule 59


State 23

	Exp5 -> Exp5 . '*' Exp6                             (rule 57)
	Exp5 -> Exp5 . '/' Exp6                             (rule 58)
	Exp4 -> Exp5 .                                      (rule 62)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 84
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 85
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62
	%eof           reduce using rule 62


State 24

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 . '<' Exp4                             (rule 63)
	Exp3 -> Exp4 . '>' Exp4                             (rule 64)
	Exp3 -> Exp4 . '<=' Exp4                            (rule 65)
	Exp3 -> Exp4 . '>=' Exp4                            (rule 66)
	Exp3 -> Exp4 . '==' Exp4                            (rule 67)
	Exp3 -> Exp4 . '!=' Exp4                            (rule 68)
	Exp3 -> Exp4 .                                      (rule 69)

	'!='           shift, and enter state 96
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 86
	','            reduce using rule 69
	'-'            shift, and enter state 87
	';'            reduce using rule 69
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'=='           shift, and enter state 99
	'>'            shift, and enter state 100
	'>='           shift, and enter state 101
	'||'           reduce using rule 69
	%eof           reduce using rule 69


State 25

	Exp2 -> Exp3 .                                      (rule 71)

	'&&'           reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'||'           reduce using rule 71
	%eof           reduce using rule 71


State 26

	Exp2 -> Exp2 . '&&' Exp3                            (rule 70)
	Exp1 -> Exp2 .                                      (rule 73)

	'&&'           shift, and enter state 88
	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	'||'           reduce using rule 73
	%eof           reduce using rule 73


State 27

	Exp1 -> Exp1 . '||' Exp2                            (rule 72)
	Exp -> Exp1 .                                       (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	'||'           shift, and enter state 89
	%eof           reduce using rule 75


State 28

	%start_pExp -> Exp .                                (rule 16)

	%eof           accept


State 29

	Exp6 -> '(' . Exp ')'                               (rule 56)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 95

State 30

	Exp6 -> '++' . Id                                   (rule 54)

	L_Id           shift, and enter state 35

	Id             goto state 94

State 31

	Exp6 -> '--' . Id                                   (rule 55)

	L_Id           shift, and enter state 35

	Id             goto state 93

State 32

	Exp6 -> 'false' .                                   (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49
	%eof           reduce using rule 49


State 33

	Exp6 -> 'true' .                                    (rule 48)

	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48
	%eof           reduce using rule 48


State 34

	Double -> L_doubl .                                 (rule 18)

	'!='           reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18
	%eof           reduce using rule 18


State 35

	Id -> L_Id .                                        (rule 19)

	'!='           reduce using rule 19
	'&&'           reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	'++'           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'--'           reduce using rule 19
	'/'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'||'           reduce using rule 19
	%eof           reduce using rule 19


State 36

	Exp6 -> Id .                                        (rule 50)
	Exp6 -> Id . '(' ListExp ')'                        (rule 51)
	Exp6 -> Id . '++'                                   (rule 52)
	Exp6 -> Id . '--'                                   (rule 53)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 90
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           shift, and enter state 91
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           shift, and enter state 92
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50
	%eof           reduce using rule 50


State 37

	%start_pExp1 -> Exp1 .                              (rule 15)
	Exp1 -> Exp1 . '||' Exp2                            (rule 72)

	'||'           shift, and enter state 89
	%eof           accept


State 38

	%start_pExp2 -> Exp2 .                              (rule 14)
	Exp2 -> Exp2 . '&&' Exp3                            (rule 70)

	'&&'           shift, and enter state 88
	%eof           accept


State 39

	%start_pExp3 -> Exp3 .                              (rule 13)

	%eof           accept


State 40

	%start_pExp4 -> Exp4 .                              (rule 12)
	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)

	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	%eof           accept


State 41

	%start_pExp5 -> Exp5 .                              (rule 11)
	Exp5 -> Exp5 . '*' Exp6                             (rule 57)
	Exp5 -> Exp5 . '/' Exp6                             (rule 58)

	'*'            shift, and enter state 84
	'/'            shift, and enter state 85
	%eof           accept


State 42

	%start_pExp6 -> Exp6 .                              (rule 10)

	%eof           accept


State 43

	Stm -> Type . ListId ';'                            (rule 40)
	Stm -> Type . Id '=' Exp ';'                        (rule 41)

	L_Id           shift, and enter state 35

	Id             goto state 82
	ListId         goto state 83

State 44

	%start_pStm -> Stm .                                (rule 9)

	%eof           accept


State 45

	Stm -> Exp . ';'                                    (rule 39)

	';'            shift, and enter state 81


State 46

	Type -> 'bool' .                                    (rule 34)

	L_Id           reduce using rule 34
	%eof           reduce using rule 34


State 47

	Type -> 'double' .                                  (rule 35)

	L_Id           reduce using rule 35
	%eof           reduce using rule 35


State 48

	Stm -> 'if' . '(' Exp ')' Stm 'else' Stm            (rule 45)

	'('            shift, and enter state 80


State 49

	Type -> 'int' .                                     (rule 36)

	L_Id           reduce using rule 36
	%eof           reduce using rule 36


State 50

	Stm -> 'return' . Exp ';'                           (rule 42)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 79

State 51

	Type -> 'void' .                                    (rule 37)

	L_Id           reduce using rule 37
	%eof           reduce using rule 37


State 52

	Stm -> 'while' . '(' Exp ')' Stm                    (rule 43)

	'('            shift, and enter state 78


State 53

	Stm -> '{' . ListStm '}'                            (rule 44)

	'('            reduce using rule 22
	'++'           reduce using rule 22
	'--'           reduce using rule 22
	'bool'         reduce using rule 22
	'double'       reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_Id           reduce using rule 22

	ListStm        goto state 77

State 54

	Arg -> Type . Id                                    (rule 38)

	L_Id           shift, and enter state 35

	Id             goto state 76

State 55

	%start_pArg -> Arg .                                (rule 8)

	%eof           accept


State 56

	%start_pType -> Type .                              (rule 7)

	%eof           accept


State 57

	%start_pListExp -> ListExp .                        (rule 6)

	%eof           accept


State 58

	ListExp -> Exp .                                    (rule 32)
	ListExp -> Exp . ',' ListExp                        (rule 33)

	')'            reduce using rule 32
	','            shift, and enter state 75
	%eof           reduce using rule 32


State 59

	ListId -> Id .                                      (rule 29)
	ListId -> Id . ',' ListId                           (rule 30)

	','            shift, and enter state 74
	';'            reduce using rule 29
	%eof           reduce using rule 29


State 60

	%start_pListId -> ListId .                          (rule 5)

	%eof           accept


State 61

	%start_pListArg -> ListArg .                        (rule 4)

	%eof           accept


State 62

	ListArg -> Arg .                                    (rule 27)
	ListArg -> Arg . ',' ListArg                        (rule 28)

	')'            reduce using rule 27
	','            shift, and enter state 73
	%eof           reduce using rule 27


State 63

	ListDef -> Def .                                    (rule 24)
	ListDef -> Def . ListDef                            (rule 25)

	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51
	%eof           reduce using rule 24

	Def            goto state 63
	ListDef        goto state 72
	Type           goto state 65

State 64

	%start_pListDef -> ListDef .                        (rule 3)

	%eof           accept


State 65

	Def -> Type . Id '(' ListArg ')' '{' ListStm '}'    (rule 21)

	L_Id           shift, and enter state 35

	Id             goto state 71

State 66

	%start_pListStm -> ListStm .                        (rule 2)
	ListStm -> ListStm . Stm                            (rule 23)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35
	%eof           accept

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 70
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 67

	%start_pDef -> Def .                                (rule 1)

	%eof           accept


State 68

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 69

	Program -> ListDef .                                (rule 20)

	%eof           reduce using rule 20


State 70

	ListStm -> ListStm Stm .                            (rule 23)

	'('            reduce using rule 23
	'++'           reduce using rule 23
	'--'           reduce using rule 23
	'bool'         reduce using rule 23
	'double'       reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_integ        reduce using rule 23
	L_doubl        reduce using rule 23
	L_Id           reduce using rule 23
	%eof           reduce using rule 23


State 71

	Def -> Type Id . '(' ListArg ')' '{' ListStm '}'    (rule 21)

	'('            shift, and enter state 127


State 72

	ListDef -> Def ListDef .                            (rule 25)

	%eof           reduce using rule 25


State 73

	ListArg -> Arg ',' . ListArg                        (rule 28)

	')'            reduce using rule 26
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51
	%eof           reduce using rule 26

	ListArg        goto state 126
	Type           goto state 54
	Arg            goto state 62

State 74

	ListId -> Id ',' . ListId                           (rule 30)

	L_Id           shift, and enter state 35

	Id             goto state 59
	ListId         goto state 125

State 75

	ListExp -> Exp ',' . ListExp                        (rule 33)

	'('            shift, and enter state 29
	')'            reduce using rule 31
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35
	%eof           reduce using rule 31

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	ListExp        goto state 124
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 58

State 76

	Arg -> Type Id .                                    (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	%eof           reduce using rule 38


State 77

	ListStm -> ListStm . Stm                            (rule 23)
	Stm -> '{' ListStm . '}'                            (rule 44)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	'}'            shift, and enter state 123
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 70
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 78

	Stm -> 'while' '(' . Exp ')' Stm                    (rule 43)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 122

State 79

	Stm -> 'return' Exp . ';'                           (rule 42)

	';'            shift, and enter state 121


State 80

	Stm -> 'if' '(' . Exp ')' Stm 'else' Stm            (rule 45)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 120

State 81

	Stm -> Exp ';' .                                    (rule 39)

	'('            reduce using rule 39
	'++'           reduce using rule 39
	'--'           reduce using rule 39
	'bool'         reduce using rule 39
	'double'       reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_integ        reduce using rule 39
	L_doubl        reduce using rule 39
	L_Id           reduce using rule 39
	%eof           reduce using rule 39


State 82

	ListId -> Id .                                      (rule 29)
	ListId -> Id . ',' ListId                           (rule 30)
	Stm -> Type Id . '=' Exp ';'                        (rule 41)

	','            shift, and enter state 74
	';'            reduce using rule 29
	'='            shift, and enter state 119


State 83

	Stm -> Type ListId . ';'                            (rule 40)

	';'            shift, and enter state 118


State 84

	Exp5 -> Exp5 '*' . Exp6                             (rule 57)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 117

State 85

	Exp5 -> Exp5 '/' . Exp6                             (rule 58)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 116

State 86

	Exp4 -> Exp4 '+' . Exp5                             (rule 60)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 115

State 87

	Exp4 -> Exp4 '-' . Exp5                             (rule 61)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 114

State 88

	Exp2 -> Exp2 '&&' . Exp3                            (rule 70)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 113

State 89

	Exp1 -> Exp1 '||' . Exp2                            (rule 72)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 112

State 90

	Exp6 -> Id '(' . ListExp ')'                        (rule 51)

	'('            shift, and enter state 29
	')'            reduce using rule 31
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	ListExp        goto state 111
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 58

State 91

	Exp6 -> Id '++' .                                   (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52
	%eof           reduce using rule 52


State 92

	Exp6 -> Id '--' .                                   (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53
	%eof           reduce using rule 53


State 93

	Exp6 -> '--' Id .                                   (rule 55)

	'!='           reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55
	%eof           reduce using rule 55


State 94

	Exp6 -> '++' Id .                                   (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54
	%eof           reduce using rule 54


State 95

	Exp6 -> '(' Exp . ')'                               (rule 56)

	')'            shift, and enter state 110


State 96

	Exp3 -> Exp4 '!=' . Exp4                            (rule 68)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 109

State 97

	Exp3 -> Exp4 '<' . Exp4                             (rule 63)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 108

State 98

	Exp3 -> Exp4 '<=' . Exp4                            (rule 65)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 107

State 99

	Exp3 -> Exp4 '==' . Exp4                            (rule 67)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 106

State 100

	Exp3 -> Exp4 '>' . Exp4                             (rule 64)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 105

State 101

	Exp3 -> Exp4 '>=' . Exp4                            (rule 66)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 36
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 104

State 102

	Exp -> Id '=' . Exp                                 (rule 74)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 103

State 103

	Exp -> Id '=' Exp .                                 (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	%eof           reduce using rule 74


State 104

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '>=' Exp4 .                            (rule 66)

	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 86
	','            reduce using rule 66
	'-'            shift, and enter state 87
	';'            reduce using rule 66
	'||'           reduce using rule 66
	%eof           reduce using rule 66


State 105

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '>' Exp4 .                             (rule 64)

	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 86
	','            reduce using rule 64
	'-'            shift, and enter state 87
	';'            reduce using rule 64
	'||'           reduce using rule 64
	%eof           reduce using rule 64


State 106

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '==' Exp4 .                            (rule 67)

	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 86
	','            reduce using rule 67
	'-'            shift, and enter state 87
	';'            reduce using rule 67
	'||'           reduce using rule 67
	%eof           reduce using rule 67


State 107

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '<=' Exp4 .                            (rule 65)

	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'+'            shift, and enter state 86
	','            reduce using rule 65
	'-'            shift, and enter state 87
	';'            reduce using rule 65
	'||'           reduce using rule 65
	%eof           reduce using rule 65


State 108

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '<' Exp4 .                             (rule 63)

	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'+'            shift, and enter state 86
	','            reduce using rule 63
	'-'            shift, and enter state 87
	';'            reduce using rule 63
	'||'           reduce using rule 63
	%eof           reduce using rule 63


State 109

	Exp4 -> Exp4 . '+' Exp5                             (rule 60)
	Exp4 -> Exp4 . '-' Exp5                             (rule 61)
	Exp3 -> Exp4 '!=' Exp4 .                            (rule 68)

	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 86
	','            reduce using rule 68
	'-'            shift, and enter state 87
	';'            reduce using rule 68
	'||'           reduce using rule 68
	%eof           reduce using rule 68


State 110

	Exp6 -> '(' Exp ')' .                               (rule 56)

	'!='           reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56
	%eof           reduce using rule 56


State 111

	Exp6 -> Id '(' ListExp . ')'                        (rule 51)

	')'            shift, and enter state 132


State 112

	Exp2 -> Exp2 . '&&' Exp3                            (rule 70)
	Exp1 -> Exp1 '||' Exp2 .                            (rule 72)

	'&&'           shift, and enter state 88
	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'||'           reduce using rule 72
	%eof           reduce using rule 72


State 113

	Exp2 -> Exp2 '&&' Exp3 .                            (rule 70)

	'&&'           reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'||'           reduce using rule 70
	%eof           reduce using rule 70


State 114

	Exp5 -> Exp5 . '*' Exp6                             (rule 57)
	Exp5 -> Exp5 . '/' Exp6                             (rule 58)
	Exp4 -> Exp4 '-' Exp5 .                             (rule 61)

	'!='           reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            shift, and enter state 84
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            shift, and enter state 85
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61
	%eof           reduce using rule 61


State 115

	Exp5 -> Exp5 . '*' Exp6                             (rule 57)
	Exp5 -> Exp5 . '/' Exp6                             (rule 58)
	Exp4 -> Exp4 '+' Exp5 .                             (rule 60)

	'!='           reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            shift, and enter state 84
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            shift, and enter state 85
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60
	%eof           reduce using rule 60


State 116

	Exp5 -> Exp5 '/' Exp6 .                             (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58
	%eof           reduce using rule 58


State 117

	Exp5 -> Exp5 '*' Exp6 .                             (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57
	%eof           reduce using rule 57


State 118

	Stm -> Type ListId ';' .                            (rule 40)

	'('            reduce using rule 40
	'++'           reduce using rule 40
	'--'           reduce using rule 40
	'bool'         reduce using rule 40
	'double'       reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'return'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_integ        reduce using rule 40
	L_doubl        reduce using rule 40
	L_Id           reduce using rule 40
	%eof           reduce using rule 40


State 119

	Stm -> Type Id '=' . Exp ';'                        (rule 41)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'false'        shift, and enter state 32
	'true'         shift, and enter state 33
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 131

State 120

	Stm -> 'if' '(' Exp . ')' Stm 'else' Stm            (rule 45)

	')'            shift, and enter state 130


State 121

	Stm -> 'return' Exp ';' .                           (rule 42)

	'('            reduce using rule 42
	'++'           reduce using rule 42
	'--'           reduce using rule 42
	'bool'         reduce using rule 42
	'double'       reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'if'           reduce using rule 42
	'int'          reduce using rule 42
	'return'       reduce using rule 42
	'true'         reduce using rule 42
	'void'         reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_integ        reduce using rule 42
	L_doubl        reduce using rule 42
	L_Id           reduce using rule 42
	%eof           reduce using rule 42


State 122

	Stm -> 'while' '(' Exp . ')' Stm                    (rule 43)

	')'            shift, and enter state 129


State 123

	Stm -> '{' ListStm '}' .                            (rule 44)

	'('            reduce using rule 44
	'++'           reduce using rule 44
	'--'           reduce using rule 44
	'bool'         reduce using rule 44
	'double'       reduce using rule 44
	'else'         reduce using rule 44
	'false'        reduce using rule 44
	'if'           reduce using rule 44
	'int'          reduce using rule 44
	'return'       reduce using rule 44
	'true'         reduce using rule 44
	'void'         reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_integ        reduce using rule 44
	L_doubl        reduce using rule 44
	L_Id           reduce using rule 44
	%eof           reduce using rule 44


State 124

	ListExp -> Exp ',' ListExp .                        (rule 33)

	')'            reduce using rule 33
	%eof           reduce using rule 33


State 125

	ListId -> Id ',' ListId .                           (rule 30)

	';'            reduce using rule 30
	%eof           reduce using rule 30


State 126

	ListArg -> Arg ',' ListArg .                        (rule 28)

	')'            reduce using rule 28
	%eof           reduce using rule 28


State 127

	Def -> Type Id '(' . ListArg ')' '{' ListStm '}'    (rule 21)

	')'            reduce using rule 26
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'int'          shift, and enter state 49
	'void'         shift, and enter state 51

	ListArg        goto state 128
	Type           goto state 54
	Arg            goto state 62

State 128

	Def -> Type Id '(' ListArg . ')' '{' ListStm '}'    (rule 21)

	')'            shift, and enter state 136


State 129

	Stm -> 'while' '(' Exp ')' . Stm                    (rule 43)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 135
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 130

	Stm -> 'if' '(' Exp ')' . Stm 'else' Stm            (rule 45)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 134
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 131

	Stm -> Type Id '=' Exp . ';'                        (rule 41)

	';'            shift, and enter state 133


State 132

	Exp6 -> Id '(' ListExp ')' .                        (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51
	%eof           reduce using rule 51


State 133

	Stm -> Type Id '=' Exp ';' .                        (rule 41)

	'('            reduce using rule 41
	'++'           reduce using rule 41
	'--'           reduce using rule 41
	'bool'         reduce using rule 41
	'double'       reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'return'       reduce using rule 41
	'true'         reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_integ        reduce using rule 41
	L_doubl        reduce using rule 41
	L_Id           reduce using rule 41
	%eof           reduce using rule 41


State 134

	Stm -> 'if' '(' Exp ')' Stm . 'else' Stm            (rule 45)

	'else'         shift, and enter state 138


State 135

	Stm -> 'while' '(' Exp ')' Stm .                    (rule 43)

	'('            reduce using rule 43
	'++'           reduce using rule 43
	'--'           reduce using rule 43
	'bool'         reduce using rule 43
	'double'       reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'if'           reduce using rule 43
	'int'          reduce using rule 43
	'return'       reduce using rule 43
	'true'         reduce using rule 43
	'void'         reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_integ        reduce using rule 43
	L_doubl        reduce using rule 43
	L_Id           reduce using rule 43
	%eof           reduce using rule 43


State 136

	Def -> Type Id '(' ListArg ')' . '{' ListStm '}'    (rule 21)

	'{'            shift, and enter state 137


State 137

	Def -> Type Id '(' ListArg ')' '{' . ListStm '}'    (rule 21)

	'('            reduce using rule 22
	'++'           reduce using rule 22
	'--'           reduce using rule 22
	'bool'         reduce using rule 22
	'double'       reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_Id           reduce using rule 22

	ListStm        goto state 140

State 138

	Stm -> 'if' '(' Exp ')' Stm 'else' . Stm            (rule 45)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 139
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 139

	Stm -> 'if' '(' Exp ')' Stm 'else' Stm .            (rule 45)

	'('            reduce using rule 45
	'++'           reduce using rule 45
	'--'           reduce using rule 45
	'bool'         reduce using rule 45
	'double'       reduce using rule 45
	'else'         reduce using rule 45
	'false'        reduce using rule 45
	'if'           reduce using rule 45
	'int'          reduce using rule 45
	'return'       reduce using rule 45
	'true'         reduce using rule 45
	'void'         reduce using rule 45
	'while'        reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	L_integ        reduce using rule 45
	L_doubl        reduce using rule 45
	L_Id           reduce using rule 45
	%eof           reduce using rule 45


State 140

	Def -> Type Id '(' ListArg ')' '{' ListStm . '}'    (rule 21)
	ListStm -> ListStm . Stm                            (rule 23)

	'('            shift, and enter state 29
	'++'           shift, and enter state 30
	'--'           shift, and enter state 31
	'bool'         shift, and enter state 46
	'double'       shift, and enter state 47
	'false'        shift, and enter state 32
	'if'           shift, and enter state 48
	'int'          shift, and enter state 49
	'return'       shift, and enter state 50
	'true'         shift, and enter state 33
	'void'         shift, and enter state 51
	'while'        shift, and enter state 52
	'{'            shift, and enter state 53
	'}'            shift, and enter state 141
	L_integ        shift, and enter state 18
	L_doubl        shift, and enter state 34
	L_Id           shift, and enter state 35

	Integer        goto state 19
	Double         goto state 20
	Id             goto state 21
	Type           goto state 43
	Stm            goto state 70
	Exp6           goto state 22
	Exp5           goto state 23
	Exp4           goto state 24
	Exp3           goto state 25
	Exp2           goto state 26
	Exp1           goto state 27
	Exp            goto state 45

State 141

	Def -> Type Id '(' ListArg ')' '{' ListStm '}' .    (rule 21)

	'bool'         reduce using rule 21
	'double'       reduce using rule 21
	'int'          reduce using rule 21
	'void'         reduce using rule 21
	%eof           reduce using rule 21


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 76
Number of terminals: 34
Number of non-terminals: 37
Number of states: 142
